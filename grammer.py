# (List Comprehension)
############################################################################################
#1. 0~19 odd 
array = [i for i in range(20) if i % 2 == 1]
print(array)

#2. 1~9까지의 수의 제곱 값을 포함하는 리스트
array2 = [i*i for i in range(1,10)]
print(array2)

# N * M 크기의 2차원 리스트 초기화
n , m = 3,4
array3 = [[0]*m for _ in range(n)]
print(array3)
############################################################################################



# (Dictionary)
############################################################################################
data = dict()
data['사과'] = 'Apple'
data['바나나'] = 'Banana'

key_list = data.keys()
value_list = data.values()
print(key_list)
print(value_list)

for key in key_list:
    print(data[key])
############################################################################################


#lambda
############################################################################################
def add(a,b):
    return a+b

print(add(3,7))

print((lambda a, b : a+b)(3,7))
############################################################################################

#I/O
############################################################################################
#데이터의 개수 입력-정수
n = int(input())

#각 데이터를 공백으로 구분하여 입력
data = list(map(int, input().split()))

#n,m,k를 공백으로 구분하여 입력
n, m, k = map(int, input().split())

#입력을 최대한 빠르게 받아야 하는 경우 - ex. 정렬, 이진 탐색, 최단경로 
#파이썬의 sys 라이브러리에 정의되어 있는 sys.stdin.readline()함수 이용
import sys
sys.stdin.readline().rstrip()
############################################################################################

# 표준 라이브러리
############################################################################################
# https://docs.python.org/ko/3/library/index.html

# 내장 함수
# itertools
# heapq
# bisect
# collections
# math
############################################################################################